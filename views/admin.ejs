 



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>

<style>
      body{
        background: linear-gradient(69deg, rgba(135, 43, 255, 0.966) 0%, rgba(255, 154, 96, 0.966) 10%, rgba(154, 201, 237, 0.7) 29% , rgba(187, 234, 232, 0.966) 32%, rgba(223, 104, 138, 0.966) 60%,  rgba(154, 69, 154, 0.966) 76%, rgba(85, 69, 154, 0.966) 100%);
        /* background-image: url('/images/contactbg.jpg'); */
        background-position: cover; 
        height: 105vh;
        /* min-height: 3000px; */

         
      }
    .pagination-card { 
        /* background: white; */ 
        background:  linear-gradient(180deg, rgba(255, 255, 255, 0.303) 100%, transparent 20%);
        border-radius: 12px;
        padding: 20px;
        margin: 20px 0;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

    .pagination-info {
        color: #64748b;
        font-size: 14px;
        font-weight: 500;
    }

    .pagination  {
        margin: 0;
    }

    .page-item .page-link .pagination{
        border: 2px solid #e2e8f0;
        color: #667eea;
        margin: 0 4px;
        border-radius: 8px;
        padding: 8px 14px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .page-item .pagination .page-link:hover {
        background: linear-gradient(135deg, #667eea 0%,#eb94f3 40%,#764ba2 100%,);
        border-color: #667eea;
        color: white;
    }

    .page-item.active .page-link .pagination{
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-color: #667eea;
        color: white;
    }

    .page-item.disabled .page-link {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
    }             
    .tableBody  {
      --bs-table-bg:transparent;
      background:  linear-gradient(180deg, rgba(255, 255, 255, 0.615) 100%, transparent 100%);
      backdrop-filter:blur(10px);
      border-radius: 12px;
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
      overflow: hidden;
    }
    .tableBody tbody tr:nth-child(odd){
      background-color: rgba(255, 255, 255, 0.15);
    }
    .tableBody tbody tr:nth-child(even){
      background-color: rgba(255, 255, 255, 0.1);
    }
    .tableBody tbody tr:hover {
      background-color: rgba(255, 255, 255, 0.25);
    }
    .tableBody tbody th {
      background-color: rgba(255, 255, 255, 0.3);
    }

    /* .particle{
            position: fixed;
            width: 3px;
            height: 3px;
            background-color: rgba(241, 241, 241, 0.9);
            border-radius: 65%;
            animation: popup  9s linear infinite;
            z-index:  13; 
            opacity: 0;
        }
        @keyframes popup{
            0%{
                transform: translateY(110vh) translateX(0);
                opacity: 0;
            }
            10%{
                opacity: 1; 
            }
            40%{
                opacity: 1; 
            }
            94%{
                opacity: 0; 
                
            }
            100%{
                transform: translateY(-10vh) translateX(var(--drift));
                opacity: 0;
            }
        }

        .particle:nth-of-type(1){left:15%; animation-delay: 0s; --drift:90px;}
        .particle:nth-of-type(3){left:30%; animation-delay: 3s; --drift:-120px;}
        .particle:nth-of-type(2){left:24%; animation-delay: 6s; --drift:80px;}
        .particle:nth-of-type(4){left:30%; animation-delay: 9s; --drift:-170px;}
        .particle:nth-of-type(5){left:40%; animation-delay: 4s; --drift:-60px;}  
        .particle:nth-of-type(6){left:50%; animation-delay: 5s; --drift:-60px;}  
        .particle:nth-of-type(7){left:70%; animation-delay: 9s; --drift:-170px;}
        .particle:nth-of-type(10){left:87%; animation-delay: 9s; --drift:70px;}
        .particle:nth-of-type(8){left:85%; animation-delay: 2s; --drift:-60px;}  
        .particle:nth-of-type(9){left:90%; animation-delay: 8s; --drift:-60px;}  
         */
     
</style>

</head>
<body class="bg-light">
<!-- 
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div> -->



<div class="container py-5">

  <div class="d-flex justify-content-between mb-4">
    <h2>Admin Panel - Users</h2>
    <button class="btn btn-primary btn-sm" onclick="showAddRow()">+ Add User</button>
  </div>


  <div class="card mb-3" style="background:linear-gradient(180deg, rgba(255, 255, 255, 0.46) 100%, transparent 20%);">
    <div class="card-body" >
      <div class="row" >
        <div class="col-md-8">
          <!-- <input type="text" id="searchInput" class="form-control" placeholder="search by fields" onkeyup="searchTable()"> -->
          <input type="text" id="searchInput" class="form-control" placeholder="search by fields">
        </div>
        <div class="col-md-4">
          <select id="searchFilter" class="form-select" onchange="searchTable()">
            <option value="all">All fields</option>
            <option value="name">Name</option>
            <option value="email">Email</option>
            <option value="score">Score</option>
          </select>
        </div>
      </div>
      <small class="text-muted d-block mt-2">
        Found: <span id="resultCount">0</span>user(s)
      </small>
    </div>
  </div>

  <form id="addForm" class="mb-3 d-none" action="/admin/add" method="POST" >
    <table class="table table-bordered tableBody  " style="background:linear-gradient(180deg, rgba(255, 255, 255, 0.46) 100%, transparent 20%);">
      <tr>
        <td><input name="name" class="form-control form-control-sm" placeholder="Name"   /></td>
        <td><input name="email" class="form-control form-control-sm" placeholder="Email" type="email" /></td>
        <td><input name="password" class="form-control form-control-sm" placeholder="Password" type="password" /></td>
        <td><input name="score" class="form-control form-control-sm" type="number" placeholder="0" /></td>
        <td><button type="submit" class="btn btn-success btn-sm">Save</button></td>
      </tr>
    </table>
  </form>

  <table class="table table-striped tableBody table-hover bg-transparent" >
    <thead class="table-light" style="--bs-table-bg:transparent;">
      <tr>
        <th>Name</th>
        <th>Email</th>
        <th>Score</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="tableBody">
        <% users.forEach((user)=>{ %>
            
                <tr id="row-<%= user._id %>" class="user-row" data-name="<%=user.name%>" data-email="<%= user.email %>" data-score="<%= user.score %>">
                    <td>
                        <input type="text" name="name" class="form-control form-control-sm user-name" value="<%=user.name%>" readonly>
                        </td>
                    <td>
                        <input type="text" name="email" class="form-control form-control-sm user-email" value="<%=user.email%>" readonly>
                        </td>
                    <td>
                        <input type="number" name="score" class="form-control form-control-sm user-score" value="<%=user.score%>" readonly>
                        </td>
                    <td> 
                        <div class="d-flex gap-2">
                            <!-- <button type="button" class="btn btn-warning btn-sm" onclick="editEnable('<%=user._id%>')">Edit</button>
                            <button type="submit" class="btn btn-primary btn-sm d-none" id="saveBtn-<%=user._id%>">Save</button> -->
                           
                           
                            <a href="/admin/edit/<%=user._id%>"  class="btn btn-warning btn-sm" >Edit</a>
                          
                              <button onclick="userdelete('<%=user._id%>')" class="btn btn-danger btn-sm">Delete</button>
<!--        
                            <a href="/admin/delete/<%=user._id%>" class="btn btn-danger btn-sm" 
                                onclick="return confirm('Are you sure you want to delete the user?')">Delete</a> -->
                            </div>
                          </td>
                </tr>
             
       <% }) %>
    </tbody>


 <!-- <tbody>
  <% users.forEach(user => { %>
    <tr id="row-<%= user._id %>">
      <td>
        <input type="text" name="name" class="form-control form-control-sm" value="<%= user.name %>" readonly />
      </td>
      <td>
        <input type="email" name="email" class="form-control form-control-sm" value="<%= user.email %>" readonly />
      </td>
      <td>
        <input type="number" name="score" class="form-control form-control-sm" value="<%= user.score %>" readonly />
      </td>
      <td> 
        <form id="form-<%= user._id %>" action="/admin/edit/<%= user._id %>" method="POST" class="d-flex gap-2">
          <button type="button" class="btn btn-warning btn-sm" onclick="editEnable('<%= user._id %>')">Edit</button>
          <button type="submit" class="btn btn-primary btn-sm d-none" id="saveBtn-<%= user._id %>">Save</button>
          <a href="/admin/delete/<%= user._id %>" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?')">Delete</a>
        </form>
      </td>
    </tr>
  <% }) %>
</tbody> -->

   
 

  </table>
   <div class="pagination-card d-flex justify-content-between align-items-center mt-4">
      <div class="pagination-info">
        Showing page <strong><%= currentPage %></strong> of <strong><%= totalPages %></strong>
        (<%= totalUsers %> total users)
      </div>

      <nav>
        <ul class="mb-0 pagination">
          <% if(currentPage>1){ %>
            <li class="page-item">
              <a href="/admin/home?page=<%= currentPage-1 %>" class="page-link">Previous</a>
            </li>

            <% }else{ %>
              <li class="page-item disabled"><span class="page-link">Previous</span></li>
            <% } %>

            <% let startPage =Math.max(1,currentPage-2); let endPage = Math.min(totalPages,currentPage+2); for(let i=startPage; i<=endPage;i++){ %>
              <li class="page-item <%=currentPage ===i?'active':'' %>">
                <a href="/admin/home?page=<%= i %>" class="page-link"><%= i %> </a>
              </li>  
            <% } %>
              
            <% if(currentPage < totalPages){ %>
              <li class="page-item">
                <a href="/admin/home?page=<%= currentPage + 1 %>" class="page-link">Next</a>
              </li>
            <% }else{ %>
              <li class="page-item disabled"><span class="page-link">Next</span></li>
            <% } %>

        </ul>
      </nav>

    </div>
  <div class="alert alert-info d-none" id="noResults">No matching user were found</div>
 
  <div class=" d-flex justify-content-end "><a href="/admin/logout" class="btn btn-outline-light justify-content-end "  >logout</a></div>
</div>

<script>
  function userdelete(id){
    if(confirm('Are you sure you want to delete the user?')){
      fetch(`/admin/delete/${id}`,{
        method:'DELETE',
        headers:{'Content-Type':'application/json'},
      })
      .then(res=> res.json())
      .then(data=>{
        if(data.success){
          alert('user deleted successfully')
          window.location.href = data.redirect
        }else{
          alert('error deleting user')
        }
      }
      )
      .catch(error=>{
        console.log(error)
      })
    
    }
     
  }



  function showAddRow() {
    document.getElementById('addForm').classList.remove('d-none');
  }

  function hideAddRow(){
    document.getElementById('addForm').classList.add('d-none')
  }

  function editEnable(userId){
    const row = document.getElementById('row-' + userId);  
    const inputs = row.querySelectorAll('input');  
    inputs.forEach(input => input.removeAttribute('readonly'));

  document.getElementById('saveBtn-' + userId).classList.remove('d-none');




    // const form = document.getElementById('form-'+userId)
    // const inputs = form.querySelectorAll('input')
    // inputs.forEach(input=>input.removeAttribute('readonly'))

    // document.getElementById('saveBtn-'+userId).classList.remove('d-none')
  }
//   function editEnable(userId){
//     const tr = document.querySelectorAll('tr')
//     const inputs = tr.querySelectorAll('td[contentEditable]')
//     inputs.forEach(input=>input.getAttribute('contentEditable')==='true')

//     document.getElementById('saveBtn-'+userId).classList.remove('d-none')
//   }
  
  function editSave(user){
    fetch(`/admin/edit/${user}`,{
        method:"PUT",
        headers:{
            'Content-Type':'application/json'
        },
        body:JSON.stringify({
            
        })
    })
  }

 function debounce(func,delay){
  let timer;
  return function(...args){
    clearTimeout(timer)
    timer = setTimeout(()=>func.apply(this, args),delay)
  }
 }

 function throttle(func,limit){
  let lastFunc
  let lastRan
  return function(...args){
    if(!lastRan){
      func.apply(this,args)
      lastRan =Date.now()
    }else{{
      clearTimeout(lastFunc)
      lastFunc= setTimeout(()=>{
        if(Date.now()-lastRan>=limit){
          func.apply(this,args)
          lastRan=Date.now()
        }
      },limit-(Date.now()-lastRan))
    
    
    }}
  }
 }

  function searchTable(){
    const searchInput =document.getElementById('searchInput').value
    const searchFilter =document.getElementById('searchFilter').value
    const tableBody =document.getElementById('tableBody') 
    const rows =document.getElementsByClassName('user-row') 
    const noResults =document.getElementById('noResults') 

    let visibleCount = 0 

    for(let i=0; i<rows.length;i++){
      const row = rows[i]
      const name = row.getAttribute('data-name').toLowerCase()
      const email = row.getAttribute('data-email').toLowerCase()
      const score = row.getAttribute('data-score').toLowerCase()

      let shouldShow = false

      if(searchInput === ''){
        shouldShow = true
      } 
      else if(searchFilter ==='all'){
        shouldShow = name.includes(searchInput) || email.includes(searchInput) ||score.includes(searchInput)
      }
      else if(searchFilter === 'name'){
        shouldShow = name.includes(searchInput)
      }
      else if(searchFilter === 'email'){
        shouldShow = email.includes(searchInput)
      }
      else if(searchFilter === 'score'){
        shouldShow = score.includes(searchInput)
      }

      if(shouldShow){
        row.style.display =''
        visibleCount++
      }else{
        row.style.display ='none'
      }

    }

    document.getElementById('resultCount').textContent = visibleCount

    if(visibleCount ===0 && searchInput!== ''){
      noResults.classList.remove('d-none')
    }else{
      noResults.classList.add('d-none')
    }
  }

  const searchInput =document.getElementById('searchInput')
  const debounceSearch =debounce(searchTable,500)

  searchInput.addEventListener('input',debounceSearch)

  window.addEventListener('DOMContentLoaded',function(){
    const totalRows =document.getElementsByClassName('user-row').length
    document.getElementById('resultCount').textContent = totalRows
  })

  document.getElementById('searchInput').addEventListener('keydown',function(e){
    if(e.key ==='Escape'){
      this.value=''
      searchTable()
    }
  })

  function handleScroll(){ 
    const scrollOutput =document.getElementById('scrollOutput')
    scrollOutput.textContent = `Scroll Y: ${window.scrollY}`
  }
  window.addEventListener('scroll',throttle(handleScroll,2000))

</script>



<!-- <div id="scrollOutput" 
  style="position:fixed; 
  bottom:20px; 
  left:20px; 
  background:white; 
  padding:8px 15px; 
  border-radius:8px;  
  font-weight:bold;">
  Scroll Y: 0
</div> -->

</body>
</html>


  
